@import "tailwindcss";

/*
  Global app background and glassmorphism helpers
  - Uses a soft gradient overlay on top of the supplied background image
  - Provides reusable "glass" utility classes that combine backdrop blur,
    subtle borders, and translucent surfaces for a premium feel
*/

@font-face {
  font-family: 'Inter';
  src: url('./assets/fonts/Inter-VariableFont_opsz,wght.ttf') format('truetype');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Playwrite';
  src: url('./assets/fonts/PlaywriteDESAS-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Noto';
  src: url('./assets/fonts/NotoSerifTelugu-VariableFont_wght.ttf') format('truetype');
  font-weight: 100 900;
  font-style: normal;
  font-display: swap;
}

@font-face {
  font-family: 'Rouge';
  src: url('./assets/fonts/RougeScript-Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

 /* Tailwind v4: set CSS variables and use them via utility classes (font-[var(--font-*)]) */
 @theme {
  --font-sans: 'Inter', ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, 'Apple Color Emoji', 'Segoe UI Emoji';
  --font-serif: 'Noto', ui-serif, Georgia, Cambria, 'Times New Roman', Times, serif;
  --font-display: 'Playwrite', 'Inter', ui-sans-serif, system-ui, sans-serif;
  --font-accent: 'Rouge', 'Playwrite', cursive;
}


/* Full-bleed immersive background */
html, body, #root {
  height: 100%;
}

body {
  /* establish stacking context for blurred background layer */
  position: relative;
  color: #e5e7eb; /* Tailwind slate-200 */
}

/* Deeply blurred, warm-tinted background image layer */
body::before {
  content: "";
  position: fixed;
  inset: 0;
  background-image:
    radial-gradient(60% 80% at 50% 0%, rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.10)),
    url('/src/assets/Monet_canada_main_background.webp');
  background-size: cover;
  background-position: center;
  filter: blur(20px) saturate(120%) brightness(0.65);
  transform: scale(1.06); /* avoid edge cropping from blur */
  z-index: -1;
}

/* Soft white haze above the image to lift perceived brightness without killing contrast */
body::after {
  content: "";
  position: fixed;
  inset: 0;
  background: radial-gradient(65% 90% at 50% 10%, rgba(255,255,255,0.20), rgba(255,255,255,0.04));
  pointer-events: none;
  z-index: -1;
}

/* Generic frosted glass surface */
.glass {
  background-color: rgba(0, 0, 0, 0.45);
  backdrop-filter: blur(50px) saturate(160%);
  -webkit-backdrop-filter: blur(50px) saturate(160%);
  border: 1px solid rgba(255, 255, 255, 0.12);
  box-shadow: 0 10px 30px rgba(0,0,0,0.35);
}

/* Slightly more transparent surface, good for nested cards */
.glass-subtle {
  background-color: rgba(17, 25, 40, 0.35);
  backdrop-filter: blur(14px) saturate(140%);
  -webkit-backdrop-filter: blur(14px) saturate(140%);
  border: 1px solid rgba(255, 255, 255, 0.10);
}

/* Thin divider look for headings/sections on glass */
.glass-divider {
  border-top: 1px solid rgba(255,255,255,0.08);
}

/* Rounded card helpers */
.card-rounded {
  border-radius: 16px;
}

/* Subtle hover elevation on glass */
.glass-hover:hover {
  box-shadow: 0 16px 40px rgba(0,0,0,0.45);
}

/* Dark, nearly opaque glass for sidebars/drawers */
.glass-heavy {
  background-color: rgba(10, 12, 16, 0.6); /* adjust alpha for more/less transparency */
  backdrop-filter: blur(18px) saturate(150%);
  -webkit-backdrop-filter: blur(18px) saturate(150%);
  border: 1px solid rgba(255, 255, 255, 0.06);
  box-shadow: 0 10px 30px rgba(0,0,0,0.45);
}

/* Code block with glass accent and subtle grid */
.code-glass {
  position: relative;
}
.code-glass::before {
  /* gradient border ring */
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 16px;
  padding: 1px;
  background: linear-gradient(180deg, rgba(255,255,255,0.22), rgba(255,255,255,0.06));
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
          mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
          mask-composite: exclude;
  pointer-events: none;
}
.code-glass::after {
  /* horizontal grid lines */
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 16px;
  background: repeating-linear-gradient(
    to bottom,
    rgba(255,255,255,0.04) 0px,
    rgba(255,255,255,0.04) 22px,
    transparent 22px,
    transparent 44px
  );
  pointer-events: none;
}

.code-lines {
  position: relative;
  padding: 12px 14px;
}
.code-line {
  display: grid;
  grid-template-columns: 32px 1fr;
  gap: 12px;
}
.code-lnum {
  color: rgba(255,255,255,0.45);
  text-align: right;
  user-select: none;
}
.code-text {
  white-space: pre-wrap;
}

/* Syntax tint for XML-like prompts */
.syntax-angle { color: rgba(255,255,255,0.55); }
.syntax-slash { color: rgba(255,255,255,0.55); }
.syntax-tag { color: #fbbf24; /* amber-400 */ }

/* ===== Mic button premium animations ===== */
@keyframes mic-glow {
  0% { transform: scale(1); opacity: .35; }
  70% { transform: scale(1.25); opacity: 0; }
  100% { transform: scale(1.25); opacity: 0; }
}

@keyframes mic-eq {
  0%, 100% { transform: scaleY(.3); }
  50% { transform: scaleY(1); }
}

.mic-glow {
  position: absolute;
  inset: -8px; /* extends glow beyond ring */
  border-radius: 9999px;
  background: radial-gradient(60% 60% at 50% 50%, rgba(251,191,36,.28), rgba(251,191,36,0));
  filter: blur(10px);
  animation: mic-glow 1.8s ease-out infinite;
  pointer-events: none;
}

.mic-ring {
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  padding: 1px;
  background: conic-gradient(from 0deg, rgba(251,191,36,.9), rgba(255,255,255,.5), rgba(251,191,36,.9));
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
          mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;
  pointer-events: none;
  opacity: .85;
}

.mic-ring-pure {
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  padding: 1px;
  background: conic-gradient(from 0deg, rgba(255,255,255,.9), rgba(255,255,255,.35), rgba(255,255,255,.9));
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
          mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;
  pointer-events: none;
  opacity: .9;
}

/* Classic, warmer ring to match painterly background */
.mic-ring-classic {
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  padding: 2px; /* thicker rim */
  background: conic-gradient(
    from 0deg,
    #d6b56a 0%, #f2e3c0 25%, #b9923c 50%, #f2e3c0 75%, #d6b56a 100%
  );
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
          mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
          mask-composite: exclude;
  pointer-events: none;
  opacity: .98;
  box-shadow: 0 1px 0 rgba(255,255,255,.35), inset 0 1px 0 rgba(255,255,255,.18), 0 0 0 1px rgba(0,0,0,.25);
  z-index: 2;
}

.eq-bars { display: grid; grid-auto-flow: column; gap: 3px; align-items: end; }
.eq-bar { width: 2px; height: 10px; background: #fff; opacity: .9; transform-origin: bottom; animation: mic-eq 850ms ease-in-out infinite; }
.eq-bar:nth-child(1) { animation-delay: 0ms; height: 8px; }
.eq-bar:nth-child(2) { animation-delay: 120ms; height: 12px; }
.eq-bar:nth-child(3) { animation-delay: 240ms; height: 16px; }
.eq-bar:nth-child(4) { animation-delay: 360ms; height: 12px; }
.eq-bar:nth-child(5) { animation-delay: 480ms; height: 8px; }

/* Live EQ (driven by mic), only layout helpers; height is set inline */
.eq-bars-live { display: grid; grid-auto-flow: column; gap: 4px; align-items: end; height: 18px; }
.eq-bar-live { width: 3px; background: #fff; border-radius: 2px; opacity: .95; transition: height 90ms linear; }

/* Ripple feedback */
@keyframes mic-ripple {
  from { transform: scale(.2); opacity: .35; }
  to { transform: scale(1); opacity: 0; }
}
.mic-ripple { position: absolute; inset: 0; border-radius: 9999px; background: radial-gradient(closest-side, rgba(255,255,255,.35), rgba(255,255,255,0)); animation: mic-ripple 420ms ease-out forwards; pointer-events: none; }

/* Gradient border for pill */
.pill-ring { position: absolute; inset: 0; border-radius: 9999px; padding: 1px; background: linear-gradient(90deg, rgba(251,191,36,.9), rgba(255,255,255,.5), rgba(251,191,36,.9)); -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0); mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0); -webkit-mask-composite: xor; mask-composite: exclude; pointer-events: none; opacity: .85; }

/* Idle mic face styling */
.mic-face { position: absolute; inset: 3px; border-radius: 9999px; background: radial-gradient(120% 120% at 50% 25%, rgba(255,255,255,0.10), rgba(0,0,0,0.65)); border: 1px solid rgba(255,255,255,0.08); box-shadow: inset 0 2px 6px rgba(255,255,255,0.08), inset 0 -8px 14px rgba(0,0,0,0.55); }
.mic-highlight { position: absolute; inset: 0; border-radius: 9999px; background: radial-gradient(60% 55% at 50% 18%, rgba(255,255,255,0.16), rgba(255,255,255,0)); pointer-events: none; }
.mic-icon { filter: drop-shadow(0 1px 0 rgba(0,0,0,0.6)); }

/* Painterly texture overlay: subtle strokes and grain */
.mic-face-art {
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  background:
    radial-gradient(120% 140% at 60% 0%, rgba(255,235,205,0.14), rgba(0,0,0,0) 60%),
    repeating-conic-gradient(
      from 0deg,
      rgba(255,255,255,0.06) 0deg 7deg,
      rgba(255,255,255,0) 7deg 14deg
    );
  mix-blend-mode: overlay;
  pointer-events: none;
}

/* Fine inner etch just inside the face */
.mic-inner-etch {
  position: absolute;
  inset: 4px;
  border-radius: 9999px;
  box-shadow: inset 0 0 0 1px rgba(255,255,255,0.18), inset 0 2px 6px rgba(0,0,0,0.35);
  pointer-events: none;
  z-index: 1;
}

/* Global pointer cursor for clickable elements */
button,
button[type],
input[type="button"],
input[type="submit"],
input[type="reset"],
[role="button"],
a,
.clickable,
.icon-button {
  cursor: pointer;
}

button[disabled],
button:disabled,
[aria-disabled="true"] {
  cursor: not-allowed;
}